				编码建议
						作者：董溥，王聪

	1. 使用malloc分配内存的时候请检测错误。即使你能保证99%的情况下malloc能够运行正常，那剩下的1%呢？

	2. 对文件打开操作时，请检查open的返回值，这个非常重要，因为open出错的概率明显要比malloc要大。进行读写操作时也请检测错误，这能保证你读写数据无丢失。

	3. 对文件操作请使用open,read，而不是C标准函数，因为（1）我们的服务器没有移植到非Unix主机上的打算 (2)系统调用比标准C库函数要快。

	4. 调用下面那些“申请系统资源”的函数时，请一定记得在最后，或者出错的时候要调用释放对应资源的函数。这些函数及其对应的函数有：

	calloc/malloc--free
	open--close
	fopen--fclose
	mmap--munmap
	mlock--munlock
	flock

如果多个此类函数相继被调用，在处理错误时请一定记得释放在这一步前面申请的*所有*资源，goto是*推荐*使用的，这里有一个很好的例子：http://wangcong.org/src/mmcpy.c 。

	5. 你应该确保你的函数是可重入的，除非你*非常*确信该函数不会在多个进程中被调用。注意，可重入的函数是不能调用不可重入函数的，比如：strtok()，getopt()。记住：你用的是Linux/Unix，多进程环境是*必须*被考虑的。

	6.  在用gcc编译你的C代码时，请一定要打开-Wall选项，相信我，它能帮助你很快定位一些错误。-W和-pedantic有时也是很有必要的。;)

